{"version":3,"sources":["components/View0.js","components/View1.js","components/View2.js","components/SummaryRow.js","components/View3.js","components/View.js","components/App.js","index.js"],"names":["View0","state","viewNum","fName","lName","dob","hcNum","gender","handleClickBegin","props","displayView","console","log","this","Container","id","Row","noGutters","style","margin","color","backgroundColor","padding","width","Button","variant","onClick","Component","View1","handleNextButton","namePattern","test","document","getElementById","innerHTML","display","border","handleChangefName","e","setState","target","value","handleChangelName","Col","xs","Form","Control","placeholder","onChange","Feedback","type","View2","patIndex","datePattern","ohipLength","dobCheck","Date","today","validateOhip","changeView","patient","prevPatIndex","handleDOB","handleHC","handleGender","handleDateLoad","dd","getDate","mm","getMonth","yyyy","getFullYear","setAttribute","num","checksum","checksumNum","i","replace","length","parseInt","charAt","toString","Group","onFocus","min","max","marginTop","as","defaultValue","disabled","SummaryRow","PureComponent","View3","handleDoneButton","Table","striped","borderless","map","row","key","SwitchView","Output","App","prevId","handleDisplayView","data","previousState","borderBottom","sm","Image","src","fluid","Jumbotron","View","ReactDOM","render"],"mappings":"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","file":"static/js/main.915a9b32.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass View0 extends Component {\n\n\n  state = {\n    viewNum: 1,\n    fName:'',\n    lName:'',\n    dob:'',\n    hcNum:'',\n    gender:''\n  }\n\n\n  handleClickBegin = () =>{\n    this.props.displayView({\n      viewNum: this.state.viewNum\n    });\n  }\n\n\n  \n  \n\n  render() {\n    console.log(\"From View0\" + this.state);\n    return (\n        <Container id='bodyContent'>\n            <Row noGutters>\n            \n              <h5 style={{margin:'80px 0 20px', color:'#002854'}}>Information</h5>\n              <p style={{color:'#5e89b4'}}>\n                This React.JS app was created for CREATE (Center for Data Science and Digital Health) as an interview project. There will be 3 main views. The first view will capture\n                the user's first and last name. The second view will capture the user's date of birth, health card number and gender. The last view will display a summary of the information collected.\n                The inputs are validated using best practices. \n              </p>\n            </Row>\n\n            <Row noGutters>\n              <h5 style={{\n                margin:'80px 0 20px', \n                color:'#002854', \n                backgroundColor:'rgb(215, 241, 240)', \n                padding: '10px', width:'100%'}}>\n                  This app is to be used for academic purposes only.\n              </h5>\n              <Button \n                variant=\"info\" \n                style={{margin:'20px 0 20px'}}\n                onClick={this.handleClickBegin}\n                >\n                Begin\n              </Button>\n            </Row>\n        </Container>\n    );\n  }\n}\n\nexport default View0;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nclass View1 extends Component {\n\n\n    state = {\n        viewNum: 2,\n        fName:'',\n        lName:'',\n      }\n\n    \n\n    handleNextButton = ()=>{\n        //Accepts only letters and some special characters\n        let namePattern = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/\n        //If there is an input pass state to display view\n        if(this.state.fName !== '' && this.state.lName !== '')\n        {\n           \n            if(namePattern.test(this.state.fName) && namePattern.test(this.state.lName)){\n                this.props.displayView({\n                    viewNum: this.state.viewNum,\n                    fName: this.state.fName,\n                    lName: this.state.lName,\n                  });\n            //If first name is not valid show error\n            }else if(!namePattern.test(this.state.fName) && namePattern.test(this.state.lName)){\n                document.getElementById('fNameError').innerHTML = 'Please enter a valid name.';\n                document.getElementById('fNameError').style.display = 'block';\n                document.getElementById('fNameInput').style.border = 'red 1px solid';\n            // If last name is not valid show error\n            }else if(!namePattern.test(this.state.lName) && namePattern.test(this.state.fName)){\n                document.getElementById('lNameError').innerHTML = 'Please enter a valid name.';\n                document.getElementById('lNameError').style.display = 'block';\n                document.getElementById('lNameInput').style.border = 'red 1px solid';\n            //If both first and last name are not valid show both errors\n            }else{\n                document.getElementById('fNameError').innerHTML = 'Please enter a valid name.';\n                document.getElementById('fNameError').style.display = 'block';\n                document.getElementById('fNameInput').style.border = 'red 1px solid';\n                document.getElementById('lNameError').innerHTML = 'Please enter a valid name.';\n                document.getElementById('lNameError').style.display = 'block';\n                document.getElementById('lNameInput').style.border = 'red 1px solid';\n            }\n        }else if(this.state.fName === '' && this.state.lName !== ''){\n            //If user tries to move on without filling in first name - show error\n            document.getElementById('fNameError').style.display = 'block';\n            document.getElementById('fNameInput').style.border = 'red 1px solid';\n            //if last name is also not valid\n            if(!namePattern.test(this.state.lName)){\n                document.getElementById('lNameError').innerHTML = 'Please enter a valid name.';\n                document.getElementById('lNameError').style.display = 'block';\n                document.getElementById('lNameInput').style.border = 'red 1px solid';\n            }\n        }else if(this.state.fName !== '' && this.state.lName === ''){\n            //If user tries to move on without last name - show error\n            document.getElementById('lNameError').style.display = 'block';\n            document.getElementById('lNameInput').style.border = 'red 1px solid';\n            //if first name is also not valid\n            if(!namePattern.test(this.state.fName)){\n                document.getElementById('fNameError').innerHTML = 'Please enter a valid name.';\n                document.getElementById('fNameError').style.display = 'block';\n                document.getElementById('fNameInput').style.border = 'red 1px solid';\n            }\n        }else{//If user tries to move on without filling in first and last name - show error\n            document.getElementById('fNameError').style.display = 'block';\n            document.getElementById('fNameInput').style.border = 'red 1px solid';\n            document.getElementById('lNameError').style.display = 'block';\n            document.getElementById('lNameInput').style.border = 'red 1px solid';\n        }\n    }\n  \n\n    handleChangefName = (e) =>{\n        this.setState({fName:e.target.value})\n        \n        //Remove error feedback if no error\n        if(this.state.fName !== ''){\n            document.getElementById('fNameInput').style.border = '#ced4da 1px solid';\n            document.getElementById('fNameError').style.display = 'none';\n        }\n    }\n\n    handleChangelName = (e) =>{\n        this.setState({lName:e.target.value})\n        \n        //Remove error feedback if no error\n        if(this.state.lName !== ''){\n            document.getElementById('lNameInput').style.border = '#ced4da 1px solid';\n            document.getElementById('lNameError').style.display = 'none';\n        }\n    }\n    \n  \n    render() {\n      console.log(this.state);\n      return (\n        <Container>\n            <Row noGutters>\n                <h5 style={{margin:'80px 0 20px', \n                color:'#002854', \n                backgroundColor:'rgb(215, 241, 240)', \n                padding: '10px', width:'100%'}}\n                >\n                    Please enter your name below (1/2):\n                </h5>\n            </Row>\n            \n            \n            <Row>\n                <Col xs={12}>\n                    <Form>\n                        <Row>\n                            <Col>\n                                <Form.Control \n                                    placeholder=\"First name\" \n                                    onChange={this.handleChangefName} \n                                    id='fNameInput'\n                                    \n                                />\n                                <Form.Control.Feedback \n                                type=\"invalid\" \n                                id=\"fNameError\">\n                                    First name is required.\n                                </Form.Control.Feedback>\n                            </Col>\n                            <Col>\n                            <Form.Control \n                                placeholder=\"Last name\"\n                                onChange={this.handleChangelName} \n                                id='lNameInput'\n                            />\n                            <Form.Control.Feedback \n                            type=\"invalid\" \n                            id=\"lNameError\">\n                                Last name is required.\n                            </Form.Control.Feedback>\n                            </Col>\n                        </Row>\n                        <Row noGutters>\n                            <Button \n                            id='nextButton'\n                            variant=\"info\" \n                            style={{margin:'20px 20px 20px 0'}} \n                            onClick={this.handleNextButton}\n                            >\n                                Next\n                            </Button>\n                        </Row>\n                    </Form>\n                </Col>\n            </Row> \n        </Container>\n      );\n    }\n  }\n  \n  export default View1;\n  \n//   style={{display:'block'}}","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nclass View2 extends Component {\n\n\n    state = {\n        viewNum: 3,\n        dob:'',\n        hcNum:'',\n        gender:''\n      }\n\n      patIndex = 0;\n     \n\n    handleNextButton = ()=>{\n        //Captures numeric year, month and day of any year 1900-2099, month 1-12, day 1-31\n        let datePattern = /^((?:19|20)[0-9]{2})-(0?[1-9]|10|11|12)-(0?[1-9]|[1-2][0-9]|3[0-1])$/\n        let ohipLength = /^(([0-9]{4})+(-[0-9]{3})+(-[0-9]{3}))$|^[0-9]{10}$/\n\n        var dobCheck = new Date(this.state.dob);\n        var today = new Date();\n\n        if(this.state.dob !== '' && this.state.hcNum !== '' && this.state.gender !== '' && dobCheck<today)\n        {\n            //If all inputs are valid\n            if(datePattern.test(this.state.dob) && ohipLength.test(this.state.hcNum) && this.validateOhip(this.state.hcNum))\n            {\n                this.props.displayView({\n                viewNum: this.state.viewNum,\n                fName:this.props.changeView.patient[this.patIndex].fName,\n                lName:this.props.changeView.patient[this.patIndex].lName,\n                dob: this.state.dob,\n                hcNum: this.state.hcNum,\n                gender: this.state.gender,\n                });\n            }\n            //If no valid date entered\n            else if(!datePattern.test(this.state.dob)){\n                document.getElementById('dateError').innerHTML = 'Not a valid date.';\n                document.getElementById('dateError').style.display = 'block';\n                document.getElementById('dateInput').style.border = 'red 1px solid';\n            //If ohip number is not 10 digits\n            }else if(!ohipLength.test(this.state.hcNum)){\n                document.getElementById('hcNumError').innerHTML = 'Health card must be 10 digits.';\n                document.getElementById('hcNumError').style.display = 'block';\n                document.getElementById('hcNumInput').style.border = 'red 1px solid';\n            //If not a valid health card number according to MOD10\n            }else if(!this.validateOhip(this.state.hcNum)){\n                document.getElementById('hcNumError').innerHTML = 'Health card is not valid (MOD10).';\n                document.getElementById('hcNumError').style.display = 'block';\n                document.getElementById('hcNumInput').style.border = 'red 1px solid';\n            }\n          this.prevPatIndex += 1;\n        }\n        //If just dob empty\n        if(this.state.dob === ''){\n            document.getElementById('dateError').style.display = 'block';\n            document.getElementById('dateInput').style.border = 'red 1px solid';\n        }\n        //If just healthcard number empty\n        if(this.state.hcNum === ''){\n            document.getElementById('hcNumError').style.display = 'block';\n            document.getElementById('hcNumInput').style.border = 'red 1px solid';\n        }\n        //If just gender empty\n        if(this.state.gender === ''){\n            document.getElementById('genderError').style.display = 'block';\n            document.getElementById('genderInput').style.border = 'red 1px solid';\n        }\n        if(dobCheck >= today){\n            document.getElementById('dateError').innerHTML = 'Date cannot be in the future.';\n            document.getElementById('dateError').style.display = 'block';\n            document.getElementById('dateInput').style.border = 'red 1px solid';\n        }\n        //If all inputs empty\n        if(this.state.dob === '' && this.state.hcNum === '' && this.state.gender === ''){\n            document.getElementById('dateError').style.display = 'block';\n            document.getElementById('dateInput').style.border = 'red 1px solid';\n            document.getElementById('hcNumError').style.display = 'block';\n            document.getElementById('hcNumInput').style.border = 'red 1px solid';\n            document.getElementById('genderError').style.display = 'block';\n            document.getElementById('genderInput').style.border = 'red 1px solid';\n        }\n        \n    }\n\n\n    handleDOB = (e) =>{\n        console.log(e.target.value)\n        this.setState({dob:e.target.value})\n        if(e.target.value !== ''){\n            document.getElementById('dateError').style.display = 'none';\n            document.getElementById('dateInput').style.border = '#ced4da 1px solid';\n        }\n    }\n\n    handleHC = (e) => {\n        this.setState({hcNum:e.target.value})\n        if(e.target.value !== ''){\n            document.getElementById('hcNumError').style.display = 'none';\n            document.getElementById('hcNumInput').style.border = '#ced4da 1px solid';\n        }\n    }\n\n    handleGender = (e) =>{\n        this.setState({gender:e.target.value})\n        if(e.target.value !== ''){\n            document.getElementById('genderError').style.display = 'none';\n            document.getElementById('genderInput').style.border = '#ced4da 1px solid';\n        }\n    }\n    //Prevents future date from being chosen in date picker\n    handleDateLoad = (e) => {\n        var today = new Date();\n        var dd = today.getDate();\n        var mm = today.getMonth()+1; \n        var yyyy = today.getFullYear();\n         if(dd<10){\n                dd='0'+dd\n            } \n            if(mm<10){\n                mm='0'+mm\n            } \n        today = yyyy+'-'+mm+'-'+dd;\n        document.getElementById(\"dateInput\").setAttribute(\"max\", today);\n      \n      today = yyyy + '-' + mm + '-' + dd;\n      //console.log('TESTING: ' + today);\n      //console.log('TESTING: ' + document.getElementById(\"dateInput\").getAttribute(\"max\"));\n    }\n\n    //Takes string\n    // checkDate = (date) => {\n    //     var today = new Date();\n    //     var dd = today.getDate();\n    //     var mm = today.getMonth()+1; \n    //     var yyyy = today.getFullYear();\n    //     if()\n    // }\n\n    validateOhip = (num) =>{\n        num = num.replace(/-/g,'');\n    \n        var check;\n        var checksum = ''; \n        var checksumNum =0;\n        for(var i=num.length-1; i--; ){\n            if(i%2===0){\n                checksum +=  (parseInt(num.charAt(i))*2).toString();\n            }else{\n                checksum += num.charAt(i)\n            }\n        }\n        for(i = 0; i<checksum.length; i++){\n            checksumNum += parseInt(checksum.charAt(i));\n        }\n      \n        check = (10-(checksumNum % 10)) % 10; // 0 when checksum is 10\n        var checkDigit = num % 10;\n    \n        return check === checkDigit;\n    }\n    \n  \n    render() {\n        console.log(this.validateOhip('30056000080008'));\n        return (\n          <Container>\n            <Row noGutters>\n                <h5 style={{\n                    margin:'80px 0 20px', \n                    color:'#002854', \n                    backgroundColor:'rgb(215, 241, 240)', \n                    padding: '10px', \n                    width:'100%'}}>Please enter your information below (2/2):\n                </h5>\n            </Row>\n            \n            \n            <Row>\n                <Col xs={12}>\n                    <Form>\n                        <Row>\n                            <Form.Group \n                            style={{padding:'0 15px', width:'100%'}} \n                            onChange={this.handleDOB}\n                            onFocus={this.handleDateLoad}>\n                                <Form.Control\n                                    id='dateInput'\n                                    type=\"date\"\n                                    min='1899-01-01' \n                                    max='2000-13-13'\n                                />\n                                <Form.Control.Feedback \n                                type=\"invalid\" \n                                id=\"dateError\">\n                                    Not a valid date.\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Col>\n                            <Form.Control \n                            id='hcNumInput'\n                            style={{margin:'10px 0 5px 0'}}  \n                            placeholder=\"Health Card Number\" \n                            onChange={this.handleHC}/>\n                            </Col>\n                            <Form.Control.Feedback \n                            type=\"invalid\" \n                            style={{margin:'0 15px', padding: '0', marginTop:'0'}}\n                            id=\"hcNumError\">\n                                Health Card Number is required.\n                            </Form.Control.Feedback>\n                        </Row>\n                        <Row noGutters>\n                            <Form.Control \n                            id='genderInput'\n                            as=\"select\" \n                            style={{margin:'20px 0 5px 0'}}\n                            onChange={this.handleGender} \n                            defaultValue={'Choose one...'}>\n                                <option disabled>Choose one...</option>\n                                <option>Male</option>\n                                <option>Female</option>\n                                <option>I'd prefer not to answer</option>\n                            </Form.Control>\n                            <Form.Control.Feedback \n                            type=\"invalid\" \n                            style={{padding: '0', marginTop:'0'}}\n                            id=\"genderError\">\n                                Must choose a gender option.\n                        </Form.Control.Feedback>\n                        </Row>\n                        <Row noGutters>\n                            \n                                <Button \n                                variant=\"info\" \n                                style={{margin:'20px 20px 20px 0'}} \n                                onClick={this.handleNextButton}>\n                                    Next\n                                </Button>\n        \n                        </Row>\n                    </Form>\n                </Col>\n            </Row> \n          </Container>\n      );\n    }\n  }\n  \n  export default View2;","import React, { PureComponent } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass SummaryRow extends PureComponent {\n\n\n  \n    render() {\n        const{\n            id,\n            fName,\n            lName,\n            dob,\n            hcNum,\n            gender\n        } = this.props;\n\n        if(id%4===0){\n        return (\n            <tr>\n                <td>{fName}</td>\n                <td>{lName}</td>\n                <td>{dob}</td>\n                <td>{hcNum}</td>\n                <td>{gender}</td>\n            </tr>\n        );\n        }else{\n            return(\n                null\n            )\n        }\n    }\n  }\n  \n  export default SummaryRow;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table'\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport SummaryRow from './SummaryRow';\nimport Button from 'react-bootstrap/Button';\nclass View3 extends Component {\n\n \n\n    //State will retain the information collected from the user to be \n    //displayed as a summary on the last view.\n    state = {\n  \n      \n    };\n  \n    \n    handleDoneButton = () =>{\n        this.props.displayView(\n            {viewNum: 0}\n          );\n    }\n  \n    render() {\n      console.log(this.state);\n      return (\n          <Container>\n            <Row noGutters>\n                <h5 style={{margin:'80px 0 20px', color:'#002854', backgroundColor:'rgb(215, 241, 240)', padding: '10px', width:'100%'}}>Summary of patient information:</h5>\n            </Row>\n            \n            \n            <Row>\n                <Table striped borderless>\n                    <thead>\n                        <tr>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Date of Birth</th>\n                            <th>Health Card Number</th>\n                            <th>Gender</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.changeView.patient.map(\n                            (row) => <SummaryRow {...row} key={row.id.toString()}/>\n                        )}\n                    </tbody>\n                </Table>\n            </Row> \n            <Row>\n                <Button variant=\"info\" \n                style={{margin:'20px 20px 20px 0'}} \n                onClick={this.handleDoneButton}>\n                    Add another patient\n                </Button>\n            </Row>\n          </Container>\n      );\n    }\n  }\n  \n  export default View3;","import React from 'react'; \n\nimport View0 from './View0'; \nimport View1 from './View1'; \nimport View2 from './View2'; \nimport View3 from './View3'; \n\n\n// a component that will render one or more components\n// based on a switch statement\nexport const SwitchView = (props) => {\n\n        let Output; // save the rendered JSX to return\n        console.log(\"From View:\" + props.changeView);\n        // check the type of the component given in props\n        switch (props.changeView.viewNum) {\n\n\n        \n            case 0:\n                Output = ( <View0 changeView={props.changeView} displayView={props.displayView}/>);\n                \n                break;\n\n            case 1:\n                Output = ( <View1 changeView={props.changeView} displayView={props.displayView}/>);\n                break;\n\n            case 2:\n                Output = ( <View2 changeView={props.changeView} displayView={props.displayView}/>);\n                break;\n\n            case 3:\n                Output = ( <View3 changeView={props.changeView} displayView={props.displayView}/>);\n                break;\n\n            default:\n                Output = (<View0 displayView={props.displayView}/>);\n                break;\n\n                }\n\n            return Output; // return the output created in switch/case\n\n        };\n\n    export default SwitchView;","import React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport View from './View';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// import Player from './Player';\n// import PlayerList from './PlayerList';\n// import AddPlayerForm from './AddPlayerForm';\n\n//style={{border:'red 2px solid'}}\n\nclass App extends Component {\n\n \n\n  //State will retain the information collected from the user to be \n  //displayed as a summary on the last view.\n  state = {\n    viewNum: 0,\n    patient: [\n      {\n        id: 1,\n        fName:'',\n        lName:'',\n        dob:'',\n        hcNum:0,\n        gender:''\n      }\n    ]\n  };\n\n  prevId = 1;\n\n  handleDisplayView = (data) =>{\n    console.log(data);\n   \n    this.setState( previousState =>{\n      return{\n        viewNum: data.viewNum,\n        patient:[\n        {\n          fName: data.fName,\n          lName: data.lName,\n          hcNum: data.hcNum,\n          dob: data.dob,\n          gender: data.gender,\n          id: this.prevId +=1\n        }\n        , ...previousState.patient\n        ]\n      };\n    })\n  }\n\n\n  \n\n  render() {\n    console.log(this.state);\n    return (\n      <div id=\"main\">\n        <Container>\n          <Row style={{borderBottom:'2px solid #8a8c8d'}}>\n            <Col xs={12} sm={2}>\n              <div id=\"logoContainer\">\n                <Image src=\"img/HHS_Logo.png\"  fluid/>\n              </div>\n            </Col>\n            <Col >\n              <Jumbotron fluid style={{backgroundColor:'white'}}>\n                <Container>\n                  <h1 style={{color:'#002854'}}>Patient Information and Validation</h1>\n                  <p style={{color:'#5e89b4'}}>\n                    Made for Hamilton Health Sciences, Center for Data Science and Digital Health.\n                  </p>\n                </Container>\n              </Jumbotron>\n            </Col>\n          </Row>\n          <View \n          changeView={this.state} \n          displayView={this.handleDisplayView}/>\n          \n        </Container>\n        \n        </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n     document.getElementById('root')\n     );\n\n\n"],"sourceRoot":""}